[gd_resource type="ShaderMaterial" load_steps=6 format=3 uid="uid://ds8wga8uvlx1j"]

[ext_resource type="FastNoiseLite" uid="uid://bxi720o107ecy" path="res://Materials/Noise/CorkNoise.tres" id="1_rrnp6"]

[sub_resource type="Shader" id="Shader_idoh0"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.1.1.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color,filter_linear_mipmap,repeat_enable;
uniform float point_size : hint_range(0,128);
uniform float roughness : hint_range(0,1);
uniform sampler2D texture_metallic : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r,filter_linear_mipmap,repeat_enable;
uniform float specular;
uniform float metallic;
uniform sampler2D texture_normal : hint_roughness_normal,filter_linear_mipmap,repeat_enable;
uniform float normal_scale : hint_range(-16,16);
uniform float rim : hint_range(0,1);
uniform float rim_tint : hint_range(0,1);
uniform sampler2D texture_rim : hint_default_white,filter_linear_mipmap,repeat_enable;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;


void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	VERTEX = VERTEX + vec3(0.0, 1.2, 0.0);
}






void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	vec4 roughness_texture_channel = vec4(1.0,0.0,0.0,0.0);
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
	NORMAL_MAP = texture(texture_normal,base_uv).rgb;
	NORMAL_MAP_DEPTH = normal_scale;
	vec2 rim_tex = texture(texture_rim,base_uv).xy;
	RIM = rim*rim_tex.x;	RIM_TINT = rim_tint*rim_tex.y;
}
"

[sub_resource type="Gradient" id="Gradient_8ba6b"]
colors = PackedColorArray(0.666667, 0.43842, 0.302348, 1, 0, 0, 0, 1)

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_ik3ix"]
seamless = true
color_ramp = SubResource("Gradient_8ba6b")
noise = ExtResource("1_rrnp6")

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_fiqs0"]
seamless = true
seamless_blend_skirt = 0.234
as_normal_map = true
bump_strength = 32.0
noise = ExtResource("1_rrnp6")

[resource]
render_priority = 0
shader = SubResource("Shader_idoh0")
shader_parameter/albedo = Color(0.819608, 0.807843, 0.827451, 1)
shader_parameter/point_size = 1.0
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/normal_scale = 1.0
shader_parameter/rim = 1.0
shader_parameter/rim_tint = 1.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/texture_albedo = SubResource("NoiseTexture2D_ik3ix")
shader_parameter/texture_normal = SubResource("NoiseTexture2D_fiqs0")
